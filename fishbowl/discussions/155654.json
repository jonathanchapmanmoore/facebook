[
  {
    "Id": "363723",
    "ThreadId": "155654",
    "Html": "<p>I'm trying to modify the source code for a project for my school..</p>\r\n<p>&nbsp;</p>\r\n<p>More specifically I need a facebook client, with some functions other than the usual functions at the facebook site..</p>\r\n<p>Since there's this wonderfull opensource app, I decided to add some function on top of it..</p>\r\n<p>&nbsp;</p>\r\n<p>What I need for a start, is to add a 'favourite' icon next to each Photo or Album, so that the user</p>\r\n<p>can 'bookmark' his favorite photos/albums for a later instant playback..</p>\r\n<p>That means the app creates a txt file with the necessary photo/album ID</p>\r\n<p>&nbsp;</p>\r\n<p>Any suggestion on how to&nbsp;begin?</p>\r\n<p>Which sections of the code to read more carefully?</p>",
    "PostedDate": "2010-02-24T08:34:18.067-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "363759",
    "ThreadId": "155654",
    "Html": "<p><span style=\"font-size:11pt;color:#1f497d\">There are a couple different ways you could do it.&nbsp; It depends on how pervasive you want the concept to be in the app.&nbsp; Probably the most straightforward way to do this is to just do it at the UI layer (i.e. don&rsquo;t bother messing with the Contigo project or the FacebookPhotoAlbum/FacebookPhoto classes)</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">In Fishbowl/Resources/Themes there are a few XAML files that describe the different pages for photos and albums:</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">GalleryHomeResources.xaml is the page you see when you click the Photos tab at the top of the window.</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">PhotoAlbumResources.xaml is the album summary page that displays a full album with the photos spread out in a wrap panel.</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">PhotoViewerResources.xaml is the individual photo viewing page (this one has 3 different templates for displaying photos which are triggered based on window size).</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">You can probably trigger the visualizations in the UI for any of those views using Converters.&nbsp; You can create a statically accessible object that&rsquo;s a lookup table for which objects have been tagged as favorites.&nbsp; If it supports INotifyPropertyChange then if you bind to it in the XAML it will cause your triggers to get reevaluated so it will update when you change state.</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">For coherence with the existing app infrastructure, you may want to leverage View/ActionCommands.cs and just add another there that exposes commands that work against your lookup table.</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">Alternatively you can build the notion into Contigo on the raw data objects (Friends&rsquo; interest level is implemented this way), but I think that may be more work and since it&rsquo;s at a lower level it&rsquo;s just a deeper change.&nbsp; The UI would then just be triggered from a property you&rsquo;d expose of the objects, rather than through a converter and a dictionary.&nbsp; If you go with this approach then you can use FacebookContact.InterestLevel as an example of what would be involved, but exposing filtered collections gets complicated and it&rsquo;s easy to accidentally do it in a way that causes bad performance characteristics or race conditions.</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">&nbsp;</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">Hope that helps,</span></p>\r\n<p><span style=\"font-size:11pt;color:#1f497d\">-Joe</span></p>",
    "PostedDate": "2010-02-24T09:40:21.27-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]